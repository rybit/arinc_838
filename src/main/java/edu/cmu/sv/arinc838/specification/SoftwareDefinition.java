package edu.cmu.sv.arinc838.specification;

import java.math.BigInteger;
import java.util.Collection;

import com.arinc.arinc838.SdfSections;

public interface SoftwareDefinition {

	/**
	 * Gets the value of the fileFormatVersion property.
	 * 
	 * @return
	 *     possible object is
	 *     {@link BigInteger }
	 *     Big Int is generated by default be the preference is to 
	 *     use a Long.  Supposition is that signed int +32 bits is larger than
	 *     the space available for java int.  Big Int is 128, long is 64 bits.
	 *     validate value is 32bit plus sign
	 *     
	 */
	public long getFileFormatVersion();

	/**
	 * Sets the value of the fileFormatVersion property.
	 * 
	 * @param value
	 *     allowed object is
	 *     {@link BigInteger }
	 *     
	 */
	public void setFileFormatVersion(long value);

	/**
	 * Gets the value of the sdfSections property.
	 * 
	 * @return
	 *     possible object is
	 *     {@link SdfSections }
	 *     
	 */
	public Collection<LoadableSoftwarePart> getSoftwareDefinitionSections();

	/**
	 * Sets the value of the sdfSections property.
	 * 
	 * @param value
	 *     allowed object is
	 *     {@link SdfSections }
	 *     
	 */
	public void setSoftwareDefinitionSections(Collection<LoadableSoftwarePart> value);

}